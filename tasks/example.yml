#sites

- name: Nginx Configure | Update the configurations for the sites inventory
  template:
    src: "{{ item.template|default('site.j2') }}"
    dest: "{{nginx_dir}}/sites-available/{{item.server.name}}"
  with_items:  nginx_sites
  when: nginx_sites|lower != 'none'

# example site files

- name: Nginx Configure | Create example site directory
  file:
    path: "{{nginx_www_dir}}/example"
    state: directory
    owner: "{{nginx_user}}"
    group: "{{nginx_user}}"
    mode: 0755

- name: Nginx Configure | Create example site files
  copy:
    src: "example_page_index.html"
    dest: "{{nginx_www_dir}}/example/index.html"
    owner: "{{nginx_user}}"
    group: "{{nginx_group}}"
    mode: 0644

- name: Nginx Configure | Create example site error pages
  copy:
    src: "error"
    dest: "{{nginx_www_dir}}/example/"
    owner: "{{nginx_user}}"
    group: "{{nginx_group}}"
    mode: 0644


# enable/disable sites

- name: Nginx Configure | Enable sites
  file:
    path:  "{{nginx_dir}}/sites-enabled/{{item.server.name}}"
    src:   "{{nginx_dir}}/sites-available/{{item.server.name}}"
    state: link
  with_items: "{{ nginx_sites }}"
  when:       nginx_sites|lower != 'none' and nginx_enabled_sites|lower != 'none' and item.server.name == "{% for e in nginx_enabled_sites %}{% if item.server is defined and item.server.name is defined and e == item.server.name %}{{item.server.name}}{% endif %}{% endfor %}"
  notify:
    - reload nginx


- name: Nginx Configure | Ensure sites not enabled are disabled
  file:
    path:  "{{nginx_dir}}/sites-enabled/{{item.server.name}}"
    state: absent
  with_items: "{{ nginx_sites }}"
  when:       nginx_sites|lower != 'none' and ( nginx_enabled_sites|lower == 'none' or item.server.name != "{% for e in nginx_enabled_sites %}{% if item.server is defined and item.server.name is defined and e == item.server.name %}{{item.server.name}}{% endif %}{% endfor %}" )
  notify:
    - reload nginx

